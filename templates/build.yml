# In a template file, use the parameters section instead of variables to define inputs.
# In a template file, use ${{ }} syntax instead of $() to read a parameter's value. 
# When you read a parameter's value, you will include the parameters section in its name. 
# For example, ${{ parameters.buildConfiguration }}.
# https://docs.microsoft.com/en-us/learn/modules/create-a-build-pipeline/8-build-multiple-configurations #

parameters:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build the project - ${{ parameters.buildConfiguration }}' ## like this ##
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration ${{ parameters.buildConfiguration }}'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - ${{ parameters.buildConfiguration }}'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)/${{ parameters.buildConfiguration }}'
    zipAfterPublish: true